Database description.

1. I’ve created following entities: owner, passport, sex, nationality, flat, room, address and ownership. 
Additionally I’ve created new tables: country, region, city, street, city_street (as a combining table because we have many-to-many relationship: 
there are many streets in the city, but the street with the same name can be in the different cities). 
We can also make the region_city table (for example we have Ivanovо in Brest region in Belarus and also in Russian Federation there is the city with the same name), 
but we only work with the flat that located in Belarus so I suppose it’s not needed at the moment.

2. The following relationships exist between entities: one-to-many and many-to-many. There is a one-to-many relationship between owner and passport, 
because one person can have several passports. 
2.1. There is also a one-to-many relationship between owner table and sex and nationality tables: one person may have only one nationality and gender, 
but different people may have the same nationality and gender.
2.2. There is a one-to-many relationship between flat and room tables: different rooms belong to the same apartment. 
2.3. There is a many-to-many relationship between owner and flat tables: the same owner can have several flats and the same flat apartment can have several 
owners, so I’ve created linking table which named onwnership.

3. I’ve included the following attributes in owner table: 
owner_id as a primary key, 
last name and first name (have a non-null constraint, because this characteristic is imperative for any person), 
second name (optional characteristic - a person may not have it), 
day, month and year of birth (imperative characteristic, set constraint for checking the date and month of birth, therefore, I set the data type to an integer), 
there is also a phone number attribute (text data type - no manipulation required), 
e-mail (is unique - there cannot be identical email address), 
foreign keys sex_id and nationality_id. 

4. The following attributes are in the passport table: 
passport_id (unique passport number, text data type - can contain both numbers and symbols), 
foreign key owner_id (determines who owns the passport, is included in the table because one person can own several passports), 
date of issue and expiration date (text data type, for using date and time functions), 
country_id (not null, so the same person may have passports of different countries, we are linking to the country table). 

5. The following attributes are included in the flat table: 
flat_id, 
house_number (an imperative attribute, is not unique),
flat_number (an imperative attribute, is not unique), 
floor (integer data type, I’ve set the constraint - it must be greater than zero)
foreign key city_id and street_id (I suppose that this is enough to determine the address of the flats in this situation).

6. The following attributes are included in the room tables:
room_id (integer data type, using as a primary key),
name (text data type, it’s needed to distinguish different types of room),
length, width and height (real data type, this characteristics has rarely integer type),
flat_id as a foreign key, because there is a one_to-many relationship between flat and room tables – we include foreign key into the table the link is “many”).

7. In the nationality table I’ve set unique value to the nationality attributes.
